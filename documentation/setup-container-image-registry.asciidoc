:toc: macro
toc::[]
:idprefix:
:idseparator: -
== Setup Container Image Registry
The scope of this section is to setup/create a container image registry or repository (depending on provider) on Docker Hub, AWS or Azure for allowing the pipeline that will package the application to push the resulting container image. By the end of this guide, we will get the container repository URI as an output.

A container image name generically has the following format:

* `<registry-url>/<namespace>/<image-name>:<tag>`

** `<registry-url>`: Container registry URL based on registry provider.
** `<namespace>`: Namespace within which the image is located.
** `<image-name>`: Repository/image name which can be from one level to n-level deep (depending on provider).
** `<tag>`: Some alphanumeric tag which is given as identifier.

== Docker Hub
=== Prerequisites
* Docker Hub account is required to access Docker Hub Registry. You can create one https://hub.docker.com/[here]. 

=== Creating an image repository
* Login on https://hub.docker.com/login[Docker Hub website].
* Go to https://hub.docker.com/repositories[Repositories] tab and click on "Create Repository".
* Provide Name and Visibility for the repository and click "Create" button.

=== Image Format
NOTE: For referencing an image in Docker Hub, you don't have to specify the `<registry-url>` since it is the default on Docker.
IMPORTANT: Docker Hub does not support multi-level image names.

* `<namespace>/<image-name>:<tag>`

** `<namespace>`: Username or Organization on Docker Hub.
** `<image-name>`: Previously chosen repository name.
** `<tag>`: Some alphanumeric tag which is given as identifier.

==== Examples
*** `devonfw/my-thai-star-angular:latest`
*** `devonfw/my-thai-star-java:1.5`
*** `devonfw/devon4quarkus-reference:2.0`

== AWS Elastic Container Registry

=== Prerequisites
* An AWS account.
* AWS CLI installed.

=== Creating an image repository namespace
* Get the AWS Account ID by executing `aws sts get-caller-identity`.
* Login to AWS ECR with the following command (an example `<region>` would be `eu-west-1`):

[source,shell]
----
   aws ecr get-login-password \
       --region <region> | docker login \
       --username AWS \
       --password-stdin <aws-account-id>.dkr.ecr.<region>.amazonaws.com
----

* Create a repository namespace with the following command:

[source,shell]
----
   aws ecr create-repository \ 
       --repository-name <namespace> \ 
       --region <region>
----

*Sample Output*
[source,json]
----
   {
       "repository": { 
           "registryId": "123456789012",
           "repositoryName": "sample-repo",
           "repositoryArn": "arn:aws:ecr:eu-west-1:123456789012:repository/project-a/nginx-web-app"
       }
   }
----

=== Image Format
* `<registry-url>/<namespace>/<image-name>:<tag>`
** `<registry-url>`: <aws-account-id>.dkr.ecr.<region>.amazonaws.com
** `<namespace>`: Previously chosen repository name.
** `<image-name>`: Freely chosen project/image-name given by the user.
** `<tag>`: Some alphanumeric tag which is given as identifier.

That is:

* `<aws-account-id>.dkr.ecr.<region>.amazonaws.com/<repository-name>/<image-name>:<tag>`

==== Examples
*** `1000000001.dkr.ecr.eu-west-1.amazonaws.com/devonfw/my-thai-star-angular:latest`
*** `1000100001.dkr.ecr.us-east-1.amazonaws.com/devonfw/my-thai-star/angular:1.5`
*** `1000200001.dkr.ecr.ap-south-1.amazonaws.com/devonfw/quarkus/sample/devon4quarkus-reference:2.0`

== Azure Container Registry

=== Prerequisites
* An Azure account with active subscription.
* An Azure resource group.
* Azure CLI installed.

=== Creating an image registry
* Login to Azure using `az login`.
* Set the Azure Subscription using `az account set --subscription <mySubscription>`.
* Create a registry with the following command:

[source,shell]
----
   az acr create --resource-group <resourcegroup-name> --name <registry-name> --sku Basic
----

*Sample Output*
[source,json]
----
{
  "adminUserEnabled": false,
  "creationDate": "2019-01-08T22:32:13.175925+00:00",
  "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myContainerRegistry007",
  "location": "eastus",
  "loginServer": "mycontainerregistry007.azurecr.io",
  "name": "myContainerRegistry007",
  "provisioningState": "Succeeded",
  "resourceGroup": "myResourceGroup",
  "sku": {
    "name": "Basic",
    "tier": "Basic"
  },
  "status": null,
  "storageAccount": null,
  "tags": {},
  "type": "Microsoft.ContainerRegistry/registries"
}
----

=== Image Format
* `<registry-url>/<namespace>/<image-name>:<tag>`
** `<registry-url>`: <registry-name>.azurecr.io
** `<namespace>/<image-name>`: Freely chosen project/image-name given by the user.
** `<tag>`: Some alphanumeric tag which is given as identifier.

That is:

* `<registry-name>.azurecr.io/<namespace>/<image-name>:<tag>`

==== Examples
*** `devonacr.azurecr.io/devonfw/my-thai-star-angular:latest`
*** `devonacr.azurecr.io/devonfw/my-thai-star/angular:1.5`
*** `devonacr.azurecr.io/devonfw/quarkus/sample/devon4quarkus-reference:2.0`

== Provider Documentation
* link:https://docs.docker.com/docker-hub/[Docker Hub]
* link:https://docs.aws.amazon.com/ecr/[AWS ECR]
* link:https://docs.microsoft.com/en-us/azure/container-registry/[Azure ACR]
* ERROR LINE ADDED FOR TESTING - Sundhar Sujith
